#!/bin/bash
# SPECTER BACKEND SECURITY SCAN - Cloud Run/Firebase Gateway Audit

# ADVERTENCIA: Ejecutar SOLO en entornos de prueba autorizados.

# Configuraci√≥n de Variables (REEMPLAZAR)
ENDPOINT="https://your-final-cloud-run-endpoint-example.app/hybrid-scan"
VALID_TOKEN="SPECTER_SECURE_TOKEN_2025"
INVALID_TOKEN="token_invalido_de_prueba"

echo "======================================================"
echo "üõ°Ô∏è INICIANDO AUDITOR√çA DE SEGURIDAD SPECTER ($ENDPOINT)"
echo "======================================================"

# --- PRUEBA 1: FALLA DE AUTENTICACI√ìN (403/401) ---
echo -e "\n[TEST 1] Probar token inv√°lido (Esperado: 403 Forbidden)"
curl -i -X POST "$ENDPOINT" \
  -H "Authorization: Bearer $INVALID_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{"code_snippet": "test"}' | grep "HTTP"

# --- PRUEBA 2: INYECCI√ìN/SANIZACI√ìN (400) ---
echo -e "\n[TEST 2] Probar DoS L√≥gico (Payload demasiado largo - Esperado: 400 Bad Request)"
# Genera 5001 caracteres 'A' para superar el l√≠mite de 5000 en el backend Node.js
PAYLOAD_LONG='{"code_snippet": "'$(python3 -c 'print("A"*5001)')'", "language": "javascript"}'

curl -i -X POST "$ENDPOINT" \
  -H "Authorization: Bearer $VALID_TOKEN" \
  -H "Content-Type: application/json" \
  -d "$PAYLOAD_LONG" | grep "HTTP"

# --- PRUEBA 3: √âXITO DE INTEGRACI√ìN (200 OK) ---
echo -e "\n[TEST 3] Probar conexi√≥n v√°lida (Esperado: 200 OK y JSON de CVSS)"
PAYLOAD_VALID='{"code_snippet": "const id = req.query.id; DB.get(id);", "language": "javascript"}'
curl -i -X POST "$ENDPOINT" \
  -H "Authorization: Bearer $VALID_TOKEN" \
  -H "Content-Type: application/json" \
  -d "$PAYLOAD_VALID" | grep -E "HTTP|severity"

echo -e "\n[AUDITOR√çA COMPLETADA] Verifique que los tests 1 y 2 devuelvan un error 4XX."